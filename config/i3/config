#!/bin/bash
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SF Mono 11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 12

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# start emacs gui
bindsym $mod+s exec emacs

# start firefox window
bindsym $mod+b exec firefox -p default

# start a quake session
bindsym $mod+t exec tilix --quake

# kill focused window
bindsym $mod+Shift+q kill

# remove window borders
for_window [class="^.*"] border pixel 0

# install gaps between windows
gaps inner 15
gaps outer 12
gaps top 45
gaps bottom 15

#--------PROGRAM EXECUTION ON START---------#
# executes python script to name workspaces by windows active in them
# commented out because for terminal programs like neomutt, nvim it only lists the name of the terminal wrapper
# exec_always --no-startup-id exec i3-workspace-names-daemon

# executes the gnome-settings daemon, to handle things like brightness and keyring
exec /usr/libexec/gnome-settings-daemon

# executes power manager
exec_always --no-startup-id exec xfce4-power-manager

# executes emacs daemon (lets me open emacs files in terminal for instant editing like I would nvim them)
exec_always --no-startup-id emacs-snapshot --daemon

# executes volume control
exec --no-startup-id volumeicon

exec --no-startup-id pavucontrol

# executes redshift, the night color temperature controller
exec --no-startup-id redshift

# executes feh, the background manager
exec --no-startup-id feh --bg-scale ~/Pictures/phone-photos/IMG_20190827_125816.jpg

# attempt to solve the keyring / networkmanager problem
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# executes nmapplet, the network manager controller (only needed after ubuntu bulk removal)
exec --no-startup-id nm-applet

# executes the xrandr dpi custom value
exec xrandr --dpi 157

# executes bluetooth manager applet, blueman
exec_always --no-startup-id blueman-applet

# executes polybar, an i3bar replacement
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
# uncomment below if the bash script doesn't work
# exec_always --no-startup-id polybar --config=/home/anthony/.config/polybar/config example

# executes compton for ""extra effects"" (I haven't read the man yet)
exec compton

# start rofi (a program launcher) and bind to sup+space

bindsym $mod+space exec --no-startup-id rofi -font Open\ Sans\ Bold\ 11 -show drun -show-cons -drun-icon-theme Yaru
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: web"
set $ws2 "2: mail"
set $ws3 "3: text"
set $ws4 "4: chat"
set $ws5 "5: files"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# tab switch to last workspace
bindsym $mod+Tab workspace back_and_forth

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#	i3bar_command i3bar
#	status_command python /usr/share/powerline/bindings/i3/powerline-i3.py
#	font pango:IBM Plex Sans 12
#}

# attempt to colour the background for polybar applet display
# client.background	#132738
